#ifndef __STM32F10X_GPIO_H
#define __STM32F10X_GPIO_H

#include "stm32f10x.h"

/*  目前浅显的理解是从跑马灯和汇编上机得来的，基本上观察注释的规律，0看成TTL低电平，1看成TTL高电平
**  resoning: 因为每个GPIO的从电气特性封装做到了与软件无关，所以这里拿出了他们共通的地方
**  主要思想：代码复用思想
*/
#define GPIO_Pin_0    ((uint16_t)0x0001)  /*!< 选择Pin0 */    //(00000000 00000001)binary
#define GPIO_Pin_1    ((uint16_t)0x0002)  /*!< 选择Pin1 */    //(00000000 00000010)binary
#define GPIO_Pin_2    ((uint16_t)0x0004)  /*!< 选择Pin2 */    //(00000000 00000100)binary
#define GPIO_Pin_3    ((uint16_t)0x0008)  /*!< 选择Pin3 */    //(00000000 00001000)binary
#define GPIO_Pin_4    ((uint16_t)0x0010)  /*!< 选择Pin4 */    //(00000000 00010000)binary
#define GPIO_Pin_5    ((uint16_t)0x0020)  /*!< 选择Pin5 */    //(00000000 00100000)binary
#define GPIO_Pin_6    ((uint16_t)0x0040)  /*!< 选择Pin6 */    //(00000000 01000000)binary
#define GPIO_Pin_7    ((uint16_t)0x0080)  /*!< 选择Pin7 */    //(00000000 10000000)binary
#define GPIO_Pin_8    ((uint16_t)0x0100)  /*!< 选择Pin8 */    //(00000001 00000000)binary
#define GPIO_Pin_9    ((uint16_t)0x0200)  /*!< 选择Pin9 */    //(00000010 00000000)binary
#define GPIO_Pin_10   ((uint16_t)0x0400)  /*!< 选择Pin10 */   //(00000100 00000000)binary
#define GPIO_Pin_11   ((uint16_t)0x0800)  /*!< 选择Pin11 */   //(00001000 00000000)binary
#define GPIO_Pin_12   ((uint16_t)0x1000)  /*!< 选择Pin12 */   //(00010000 00000000)binary
#define GPIO_Pin_13   ((uint16_t)0x2000)  /*!< 选择Pin13 */   //(00100000 00000000)binary
#define GPIO_Pin_14   ((uint16_t)0x4000)  /*!< 选择Pin14 */   //(01000000 00000000)binary
#define GPIO_Pin_15   ((uint16_t)0x8000)  /*!< 选择Pin15 */   //(10000000 00000000)binary
#define GPIO_Pin_All  ((uint16_t)0xFFFF)  /*!< 选择全部引脚*/ //(11111111 11111111)binary


/*注释的高级装逼版本*/
#if 0
typedef enum
{ 
  Pin_0=GPIO_Pin_8, Pin_1=GPIO_Pin_1, Pin_2=GPIO_Pin_2,  Pin_3=GPIO_Pin_3,  Pin_4=GPIO_Pin_4,  Pin_5=GPIO_Pin_6,  Pin_6=GPIO_Pin_6,Pin_7=GPIO_Pin_7,
  Pin_8=GPIO_Pin_8, Pin_9=GPIO_Pin_9, Pin_10=GPIO_Pin_10, Pin_11=GPIO_Pin_11, Pin_12=GPIO_Pin_12, Pin_13=GPIO_Pin_13, Pin_14=GPIO_Pin_14, Pin_15=GPIO_Pin_15     
    
}GPIO_Pin_x;
#endif


/*  以下部分参考STM32官方手册 8.1+8.2节
**  同学们想入坑嵌入式开发就多看官方文档，鸡不可失，鸭不再来
*/
typedef enum
{ 
  GPIO_Speed_10MHz = 1,                             // 10MHZ        (01)b
  GPIO_Speed_2MHz,                                  // 2MHZ         (10)b
  GPIO_Speed_50MHz                                  // 50MHZ        (11)b
}GPIO_Mode_TypeDef;

typedef enum
{ GPIO_IOtype_Input = 0x0,                            // 模拟输入     (0000 0000)b
  GPIO_IOtype_Input_Floating = 0x04,                  // 浮空输入     (0000 0100)b
  GPIO_IOtype_Input_Pulldown = 0x28,                  // 下拉输入     (0010 1000)b
  GPIO_IOtype_Input_Pullup = 0x48,                    // 上拉输入     (0100 1000)b
  
  GPIO_IOtype_Output_OpenDrain = 0x14,                // 开漏输出     (0001 0100)b
  GPIO_IOtype_Output_PushPull = 0x10,                 // 推挽输出     (0001 0000)b
  GPIO_IOtype_AlternateFunction_OpenDrain = 0x1C,     // 复用开漏输出 (0001 1100)b
  GPIO_IOtype_AlternateFunction_PushPull = 0x18       // 复用推挽输出 (0001 1000)b
}GPIO_Configuration_TypeDef;

typedef struct
{
	uint16_t GPIO_Pin;        //指定哪个引脚
	uint16_t GPIO_IOtype;     //指定工作输入输出类型
	uint16_t GPIO_Speed;      //指定工作频率
}GPIO_InitTypeDef;




void GPIO_SetBits(GPIO_TypeDef *  GPIOx,uint16_t  GPIO_Pin);
void GPIO_ResetBits(GPIO_TypeDef *  GPIOx,uint16_t  GPIO_Pin);
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct);
#endif  /*__STM32F10X_GPIO_H*/

